
# ========================================================================== #
#                                  FUNCOES
# ========================================================================== #
cat > /dev/null <<COMMENT

	ldIAHXTAB	-		[]		Carrega a tabela de controle de processamento com o arquivo central
readANY	rdANYTHING	PARM1		[Ok]	1	Retorna o ID do indice, por qualquer item
readIDX	rdINDEX		PARM1		[Ok]	2	Retorna o nome do indice
readINS	rdINSTANCIA	PARM1		[]	3	Retorna o nome da instancia
readDIR	rdDIRETORIO	PARM1		[]	4	Retorna o diretorio de processamento
readCMM	rdINDEXROOT	PARM1		[]	6	Retorna o caminho da raiz do indice
	rdTESTE		PARM1		[]	7	Retorna o nome do servidor de teste
readHOM	rdHOMOLOG	PARM1		[]	9	Retorna o nome do servidor de homologacao de dados
readPRO	rdPRODUCAO	PARM1		[]	10	Retorna o nome do servidor de producao
readINB	rdINBOX		PARM1		[]	12	Retorna o diretorio de dados no INBOX
readLDW	rdLILDBIWEB	PARM1		[]	13	Retorna o caminho para bases externas em LilDBI-Web
	rdPORT		PARM1		[]	11	Obtem o numero do iahx-server para o indice
	rdSTATUS	PARM1		[]	14	Status da instancia (Ativo / Desativo /?)
	rdPROCESSA	PARM1		[]	15	Obtem situacao do processamento 
	rdINFO		[PARM1]		[]	ALL	retorna informacoes da biblioteca
	rdTYPE		PARM1		[]	26	Retorna o tipo de processamento (MANUAL / PROGRAMADO)
	rdPERIOD	PARM1		[]	27	Periodicidade de processamento
	rdALL		PARM1		[]	1/3	Retorna pares ID Instancia
	rdTODAS		PARM1		[]	3	Retorna com a lista de instancias no arquivo de PARM1
	rdPORTAL	PARM1		[]	28	Nome do portal
	rdURLOK		PARM1		[]	29	URL publicamente disponivel (P / H / PH / -)
readURL	rdURL		PARM1		[]	30	URL (parte fixa)
	rdHOMAPPL	PARM1		[]	8	Retorna o nome do servidor de homologacao de aplicacao
	rdVERSION	PARM1		[]	33	VersÃ£o do iAHx
	rdLANG		PARM1		[]	32	Obtem lista de idiomas da interface
	rdOBSERVATION	PARM1		[]	34	Observacoes sobre a Instancia
	rdCONSULTA	PARM1		[]		Indice consultado
	rdTIMEHOMOL	PARM1		[]		Ultima atualizacao em homologacao
	rdTIMEPROD	PARM1		[]		Ultima atualizacao em producao
	rdBASES		PARM1 PARM2	[]		Bases participantes do indice

COMMENT
# ========================================================================== #
# rdANYTHING	Le o ID oficial do indice
# PARM $1	ID ou qualquer item tabelado para o indice
# Observacao	Retorna o primeiro encontrado qdo houver mais de um
#		Antiga funcao readANY
#
rdANYTHING() {
	TMPR=$(grep -i "^${1}\b" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		# Perguntou usando o proprio identificador
		echo  "$TMPR" | awk -F "\t" '{ print $1 }' | head -1
	else
		# Perguntou usando outro elemento de dado
		TMPR=$(grep -i "\b${1}\b" $PATH_EXEC/tabs/iAHx.tab)
		if [ $? -eq 0 ]; then
			echo "$TMPR" | awk -F "\t" '{ print $1 }' | head -1
		else
			#  Nao encontrou correspondencia
			false
		fi
	fi
}

# rdALL		Le a chave primaria de todas as instancias e seus nomes
# PARM $1	caminho e nome do arquivo para conter a lista
# Observacao	Grava no arquivo indicado a lista colunas separadas por pipe
rdALL () {
	awk -F "\t" '{ print $1 "|" $4 }' $PATH_EXEC/tabs/iAHx.tab > $1
}

# rdTODAS	Le o nome de todas as instancias
# PARM $1       caminho e nome do arquivo para conter a lista
# Observacao    Grava no arquivo indicado a lista com as instancias cadastradas
#
rdTODAS() {
	awk -F "\t" '{ print $4 }' $PATH_EXEC/tabs/iAHx.tab > $1
}

# rdINDEX	Le o nome do indice como o SOLR conhece
# PARM $1	ID do indice a recuperar dados
# Observacao	Antiga funcao readIDX
#
rdINDEX() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo  "$TMPR" | awk -F "\t" '{ print $2 }'
	else
		false
	fi
}

# rdPORTAL	Obtem o nome do portal servido pelo indice
# PARM $1	ID do indice a recuperar dados
# Observacao	Nome humano do portal
#
rdPORTAL() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $3 }'
	else
		false
	fi
}

# rdINSTANCIA	Obtem o nome da instancia como o usuario conhece
# PARM $1	ID do indice a recuperar dados
# Observacao	Complemento da URL para acesso a pesquisa
#		Antiga funcao readINS
#
rdINSTANCIA() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $4 }'
	else
		false
	fi
}

# rdURL		Obtem a URL de chamada da interface OPAC
# PARM $1	ID do indice a recuperar dados
# Observacao	URL base da interface de pesquisa sem a identificacao do indice
#		Antiga funcao readURL
#
rdURL() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $5 }'
	else
		false
	fi
}

# rdURLOK	Obtem a situacao da URL
# PARM $1 	ID do indice a recuperar dados
# Observacao	Situacao de acessibilidade ou nao da URL
#
rdURLOK() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $6 }'
	else
		false
	fi
}

# rdDIRETORIO	Le o diretorio de processamento
# PARM $1 	ID do indice a recuperar dados
# Observacao	Diretorio corrente para tempo de processamento
#		Antiga funcao readDIR
#
rdDIRETORIO() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $7 }'
	else
		false
	fi
}

# rdINDEXROOT	Obtem o caminho comum nos servidores (raiz dos indices)
# PARM $1	ID do indice a recuperar dados
# Observacao	Topo da arvore dos indices no iahx-server
#		Antiga funcao readCMM
#
rdINDEXROOT() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $8 }'
	else
		false
	fi
}

# rdTESTE	Le o nome do servidor de teste
# PARM $1	ID do indice a recuperar dados
# Observacao	hostname do servidor de teste
#
rdTESTE() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		# FIXME
		echo "$TMPR" | awk -F "\t" '{ print $9 }'
		# FIXME
	else
		false
	fi
}

# rdHOMOLOG	Le o nome do servidor de homologacao
# PARM $1	ID do indice a recuperar dados
# Observacao	hostname do servidor de homologacao
#		Antiga funcao readHOM
#
rdHOMOLOG() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $9 }'
	else
		false
	fi
}

# rdPRODUCAO	Le o nome do servidor de producao
# PARM $1	ID do indice a recuperar dados
# Observacao	hostname do servidor de producao
#		Antiga funcao readPRO
#
rdPRODUCAO() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $10 }'
	else
		false
	fi
}
								
# rdINBOX	Obtem o diretorio de INBOX em $PATH_INPUT
# PARM $1	ID do indice a recuperar dados
# Observacao	Antiga funcao readINB
#
rdINBOX() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $11 }'
	else
		false
	fi
}

# rdLILDBIWEB	Obtem o endereco da bases de LILDBI-Web
# PARM $1	ID do indice a recuperar dados
# Observacao	O endereco deve incluir hostname e caminho completo ate a base de dados
#		Antiga funcao readLDW
#
rdLILDBIWEB() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $12 }' | tr "^" "\012"
	else
		false
	fi
}

# rdSTATUS	Obtem o status da instancia
# PARM $1	ID do indice a recuperar dados
# Observacao	Responde como ATIVO / DESATIVO / ?
#
rdSTATUS() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $13 }'
	else
		false
	fi
}

# rdVERSION	Obtem a versao do iAHx aplicado
# PARM $1	ID do indice a recuperar dados
# Observacao	Responde com o numero da versao
#
rdVERSION() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $14 }'
	else
		false
	fi
}

# rdOBSERVATION	Obtem notas sobre a instancia
# PARM $1	ID do indice a recuperar dados
# Observacao	Responde com o texto cadastrado
#
rdOBSERVATION() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $15 }'
	else
		false
	fi
}

# rdPERIOD	Obtem a periodicidade de processamento/atualizacao
# PARM $1	ID do indice a recuperar dados
# Observacao	Responde com um text (weekly / annual / ...)
#
rdPERIOD() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		echo "$TMPR" | awk -F "\t" '{ print $16 }'
	else
		false
	fi
}

# rdTIMEHOMOL	Obtem a versao do iAHx aplicado
# PARM $1	ID do indice a recuperar dados
# Observacao	Responde com data e hora no formato YYYYMMDD hh:mm:ss
#
rdTIMEHOMOL() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		INDEXROOT=$(rdINDEXROOT $1)
		IDXSOLR=$(rdINDEX $1 | tr "-" "/")
		[ "$IDXSOLR" = "portal/org" ] && IDXSOLR="portalorg/main"
		SERVER=$(rdHOMOLOG $1)
		if [ -z "$SERVER" -o "$SERVER" = "." ]; then
			# Homologacao inexistente
			#echo "0000-00-00 00:00:00"
			# Homologacao no processamento
			ls -l --time-style full-iso $INDEXROOT/$IDXSOLR/data/index/segments.gen | awk '{ print $6 " " $7 }'
		else
			# Homologacao remota
			ssh transfer@$SERVER ls -l --time-style full-iso $INDEXROOT/$IDXSOLR/data/index/segments.gen | awk '{ print $6 " " $7 }'
		fi
	else
		false
	fi
}

# rdTIMEPROD	Obtem a versao do iAHx aplicado
# PARM $1	ID do indice a recuperar dados
# Observacao	Responde com data e hora no formato YYYYMMDD hh:mm:ss
#
rdTIMEPROD() {
	TMPR=$(grep "^${1}	" $PATH_EXEC/tabs/iAHx.tab)
	if [ $? -eq 0 ]; then
		INDEXROOT=$(rdINDEXROOT $1)
		IDXSOLR=$(rdINDEX $1 | tr "-" "/")
		[ "$IDXSOLR" = "portal/org" ] && IDXSOLR="portalorg/main"
		SERVER=$(rdPRODUCAO $1)
		if [ -z "$SERVER" -o "$SERVER" = "." ]; then
			# Producao inexistente
			echo "0000-00-00 00:00:00"
			# Producao no processamento
			#ls -l --time-style full-iso $INDEXROOT/$IDXSOLR/data/index/segments.gen | awk '{ print $6 " " $7 }'| cut -d "." -f "1"
		else
			# Producao remota
			ssh -p 8022 transfer@$SERVER "ls -l --time-style full-iso $INDEXROOT/$IDXSOLR/data/index/segments.gen" | awk '{ print $6 " " $7 }'| cut -d "." -f "1"
		fi
	else
		false
	fi
}

# rdCONSULTA	Obtem o nome do indice fisico consultado
# PARM $1	ID do indice a recuperar dados
# Observacao	
#rdCONSULTA() {
#}

# rdPORT	Obtem o numero do iahx-server para o indice
# PARM $1	ID do indice a recurerar o iahx-server
# Observacao	No retorno se o codigo for TRUE o numero retornado eh valido
rdPORT() {
	INDX=$(rdINDEX $1)
	INSTANCIAS="${PATH_IAHX}/../instances/"
	for instance in $(ls $INSTANCIAS)
	do
		if [ -f "${INSTANCIAS}/${instance}/conf/Catalina/localhost/${INDX}.xml" ]; then
			echo ${instance}
			break
		fi
		false
	done
}

# rdPROCESSA	Obtem estado do processamento do indice
# PARM $1 	ID do indice a saber se esta em processamento
# Observacao	
#rdPROCESSA() {
#}

# rdBASES	Obtem lista de bases participantes do indice
# PARM $1	ID do indice
# PARM $2	Caminho
# Observacao	
#rdBASES() {
#}

# ========================================================================== #

